#!/usr/local/bin/ansible-playbook --inventory=inventory
- name: MSIO | Ensign | Terraform Deploy
  hosts: localhost
  vars_files:
    - variables
  tasks:
    - name: MSIO | Ensign | Detect RunAs User
      become: false
      local_action: command whoami
      register: ansible_user_connected

    - name: MSIO | Ensign | Create Group 'CCIO'
      group:
        name: ccio
        gid: 7000
        system: true
        state: present
        non_unique: true

    - name: MSIO | Ensign | Create Terraform State Directory
      file:
        state: directory
        owner: "{{ ansible_user_connected.stdout }}"
        group: ccio
        recurse: yes
        mode: '775'
        path: "{{ item }}"
      with_items:
        - "/root/.ccio/state/dns"

    - name: MSIO | Ensign | GCP | DNS | Write State Provider from Template
      template:
        src: "{{ item }}"
        dest: "/root/.ccio/ensign/terraform/gcp/dns/state.tf"
        owner: "{{ ansible_user_connected.stdout }}"
        group: "ccio"
        mode: '755'
      with_items: 
        - "/root/.ccio/ensign/ansible/templates/tf/dns/terraform.tfstate.j2"

    - name: MSIO | Ensign | GCP | Build GCP DNS Zone
      terraform:
        project_path: "/root/.ccio/ensign/terraform/gcp/dns/"
        state: present
        force_init: true
       #variables_file: "../../vars/variables.tf"

    - name: MSIO | Ensign | GCP | Detect Google GCP Name Servers
      shell: gcloud dns managed-zones describe ministackdev | awk '/googledomains/{print $2}' | sed 's/\.com\./.com/g'
      register: dns_values
    - debug: var=dns_values
