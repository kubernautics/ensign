#!/bin/ansible-playbook --inventory=inventory
# Purpose:
# - build k3s as base for remote wireguard ingress gateway
############################################################################

- name: MSIO | Ensign | K3s Prep
  hosts: localhost
  vars_files:
    - vars/custom.yml
    - vars/main.yml
  tasks:
    - name: MSIO | Ensign | Detect RunAs User
      become: false
      local_action: command whoami
      register: ansible_user_connected

    - name: MSIO | Ensign | GCP | Build Instance
      terraform:
        project_path: 'tf/instance/'
        state: present
        force_init: true
      register: tf_run
    - debug: var=tf_run.outputs.public_ipv4.value

    - name: MSIO | Ensign | Add Ensign IP as Host
      add_host:
        name: '{{ tf_run.outputs.public_ipv4.value }}'
        hostname: '{{ tf_run.outputs.public_ipv4.value }}'
        groups: ensign.gcp

    - name: MSIO | Ensign | purge known_hosts
      lineinfile:
        dest: "/home/{{ ansible_user_connected.stdout }}/.ssh/known_hosts"
        regexp: '{{ tf_run.outputs.public_ipv4.value }}'
        state: absent

- name: MSIO | Ensign | K3s Deploy
  hosts: ensign.gcp
  vars_files:
    - vars/custom.yml
    - vars/main.yml
  become: true
  tasks:
    - name: MSIO | Ensign | k3s | Add /usr/local/bin to system-wide $PATH.
      copy:
        dest: /etc/profile.d/path-usr-local-bin.sh
        content: 'PATH=$PATH:/usr/local/bin'

    - name: Install yum utils
      yum:
        name: 
          - yum-utils
          - epel-release
        state: latest

    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo
      become: yes

    - name: Enable Docker Test repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-test'
        option: enabled
        value: 0
      become: yes

    - name: MSIO | Ensign | k3s | Add k3s-selinyx & containerd.io via URL
      yum:
        name:
          - 'https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm'
          - 'https://rpm.rancher.io/k3s-selinux-0.1.1-rc1.el7.noarch.rpm'
        state: present

    - name: Install Docker
      package:
        name: 
          - htop
          - docker-ce
          - container-selinux
          - selinux-policy-base
        state: latest
      become: yes

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
      become: yes

    - name: Disable Firewalld service (using gcp firewall rules in TF)
      systemd:
        name: firewalld
        state: stopped
        enabled: no
      become: yes

    - name: MSIO | Ensign | k3s | Download k3s Install Script
      get_url:
        url: https://get.k3s.io
        dest: /usr/local/bin/get-k3s-io
        mode: 755
      become: yes

    - name: MSIO | Ensign | k3s | Run k3s Install Script
      shell: /usr/local/bin/get-k3s-io

#   - name: MSIO | Ensign | k3s | stage .kube/config
#     file:
#       path: "/etc/rancher/k3s/k3s.yaml"
#       state: directory
#       recurse: yes
#       owner: root
#       mode: '755'

    - name: MSIO | Ensign | k3s | stage .kube/config
      file:
        dest: "/root/.kube"
        state: directory
    - file:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "/root/.kube/config"
        state: hard

#sudo mkdir /root/.kube 2>/dev/null
#sudo cp /etc/rancher/k3s/k3s.yaml /root/.kube/config
