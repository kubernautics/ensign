https://cloud.digitalocean.com/account/api/tokens
 - generate new token
 - create token name (EG: ensign)
 - Enable scopes: {read,write}
 - Save token to: ~/.ccio/secrets/digitalocean/token
 - cp credentials file to: ~/.ccio/secrets/digitalocean/credentials

```
/bin/bash -c "\
curl -L $(curl \
-s https://api.github.com/repos/digitalocean/doctl/releases/latest \
| grep browser_download_url \
| awk '/linux-amd64.tar.gz/{print $2}' \
) | sudo tar xvzf - --directory /usr/bin/ doctl"
```
```
curl -s https://api.github.com/repos/sl1pm4t/terraform-provider-lxd/releases/latest | jq '.assets | .[] | .browser_download_url' | grep linux_amd64
curl -L https://github.com/sl1pm4t/terraform-provider-lxd/releases/download/v1.3.0/terraform-provider-lxd_v1.3.0_linux_amd64.zip --output /tmp/terraform.provider.lxd.zip
7z e /tmp/terraform.provider.lxd.zip -o${HOME}/.terraform.d/plugins/
```
# https://cloud.google.com/free
# - Get Started Free
# - Create Account
# - Add Billing
# https://console.cloud.google.com/getting-started
# Instances to test:
# - f1-micro
# - e2-micro
# - e2-small
# Install gcloud cli
# - $ curl https://sdk.cloud.google.com > install.sh
# - $ bash install.sh --disable-prompts --install-dir=${HOME}
# - $ cp bashrc.d/google ~/.bashrc.d/google
# - $ gcloud init
# - open hyperlink provided & login
# - allow sdk access rights
# - copy code back into terminal prompt
# - create new project 
# - enter new project id name (eg: ministackdev)
# - open web console to verify (eg: https://console.cloud.google.com/getting-started?project=ministackdev)
# - open billing console & link new project to billing account (eg: https://console.cloud.google.com/billing/linkedaccount?project=ministackdev)
# - $ gcloud projects list
# - $ gcloud config set project ministackdev
# - $ gcloud services list --available
# - $ gcloud services list --available | grep -i dns
# - $ gcloud services list --available | grep -i dns
# - $ gcloud iam service-accounts create terraform --description="cloudctl terraform iam role" --display-name=terraform --project=ministackdev
# - $ gcloud iam service-accounts keys create $GOOGLE_APPLICATION_CREDENTIALS --iam-account terraform@ministackdev.iam.gserviceaccount.com
# - $ gcloud dns managed-zones create --visibility=public --dns-name="ministack.dev" --description="A zone" "ministackdev"
# - $ gcloud projects add-iam-policy-binding ministackdev --member serviceAccount:terraform@ministackdev.iam.gserviceaccount.com --role roles/admin
# - $ terraform init
# - $ terraform apply
# - $ ssh `terraform output ip`
# - $ gcloud dns managed-zones describe ministackdev | awk '/googledomains/{print $2}' | sed 's/\.com\./.com/g'
# - Configure Registrar Nameservers with output
# - ( https://domains.google.com/m/registrar/ministack.dev/dns )
# - $ cd ../instance/ ; terraform import google_compute_address.ensign_public_ipv4 projects/ministackdev/regions/us-west3/addresses/ensign-public-ipv4
# - $ gcloud compute --project=ministackdev instances get-serial-port-output ensign --zone=us-west3-a
#
#
# 
##################################################################
# Refrence:
# https://cloud.google.com/compute/vm-instance-pricing#sharedcore
# https://cloud.google.com/dns/docs/migrating << how to migrate DNS to GCP
# #######################################3
# gcloud services enable dns.googleapis.com --async
# gcloud services enable iam.googleapis.com --async
# 
